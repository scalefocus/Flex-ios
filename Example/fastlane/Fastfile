desc "Submit a new build to Crashlytics"    
desc "This action does the following:"    
desc ""
desc "- Clear derived data" 
desc "- Turn off automatic signing" 
desc "- Increment the build number"
desc "- Change the bundle id to appropriate for in house provisioning profile" 
desc "- Download or create certificates" 
desc "- Download or create provisioning profile"  
desc "- Switching to the correct team" 
desc "- Updating provisioning profile with the one from sigh" 
desc "- Build and sign the app"    
desc "- Upload the ipa file to crashlytics"    
lane :deploy_crashlytics do |values|
  
    CRASHLYTICS_API_KEY = "dc301c285188282514ae046553a7e432176ef15f" # API key of the organization. Defaults to the Upnetix key.
    CRASHLYTICS_BUILD_SECRET = "aec6a8a4d2c8aefb03918ed8dc872b3d656aebc87a38b0c04cb1e1634b8a1a06" # Build secret of the organization. Defaults to the Upnetix secret.
    CRASHLYTICS_TEST_GROUP = 'upnetix-localizer-demo' # Set to the test group for the app. Make sure the group is existing, or remove it from the crashlytics step. Make sure you use the alias, and not the display name from crashlytics web
    CRASHLYTICS_DEFAULT_MAIL_LIST = ['v.s.kaltchev@gmail.com', 'valentin.kalchev@upnetix.com'] # any hardcoded mails, which might not be in the particular test group
	  BUILD_NUMBER = Time.new.strftime("%-y.%-m.%-d%H%M")
	  XCPROJECT_PATH = File.expand_path "../UpnetixLocalizer.xcodeproj"
		XCWORKSPACE_PATH = File.expand_path "../UpnetixLocalizer.xcworkspace"
		INFO_PLIST_PATH = File.expand_path "../UpnetixLocalizerDemo/Info.plist"
		PLIST_RELATIVE_TO_PROJECT_PATH = "UpnetixLocalizerDemo/Info.plist"
		JENKINS_APPLEID_WITH_RIGHTS = "ci@upnetix.com"
		APP_ID_IN_DEVELOPER_PROFILES = "com.upnetix.UpnetixLocalizerDemo" # change according to your app id, must match the app id in the InHouse Provisioning profile used
		TEAM_ID = "UWBDU93DZY" # do not change if using UPNETIX AD team (default)
		SHOULD_NOTIFY_TESTERS = "1" # "1" for yes, "0" for no
		SCHEME_TO_BUILD = "UpnetixLocalizerDemo"
    TARGET_FILTER = "UpnetixLocalizerDemo" #name of target that needs signing
    # if for some reason you need signing for multiple targets, find the proper way to do it
    
    emails = values[:test_email] ? values[:test_email] : CRASHLYTICS_DEFAULT_MAIL_LIST # You can list more emails here
    groups = values[:test_email] ? nil : [CRASHLYTICS_TEST_GROUP] # You can define groups on the web and reference them here
	
		clear_derived_data
    
    # Turn off automatic signing for the project.
    automatic_code_signing(
      path: XCPROJECT_PATH,
      use_automatic_signing: false
    )
	
    # Increment build number. increment_build_number conflicts with update_app_identifier and currently won't work properly(11.07.2016). Thus using workaround with set_info_plist_value		
    set_info_plist_value(
	   	path: INFO_PLIST_PATH, 
			key: "CFBundleVersion", 
			value: BUILD_NUMBER
	  )

    # Update app bundle to reflect beta status
    update_app_identifier(
    	plist_path: PLIST_RELATIVE_TO_PROJECT_PATH,
    	xcodeproj: XCPROJECT_PATH,
    	app_identifier: APP_ID_IN_DEVELOPER_PROFILES
    )
	
		# Download or create certificates
		cert(
			username: JENKINS_APPLEID_WITH_RIGHTS, 
			team_id: TEAM_ID
		)
	
		# Download or create provisioning profile
		sigh(
			app_identifier: APP_ID_IN_DEVELOPER_PROFILES, 
			username: JENKINS_APPLEID_WITH_RIGHTS, 
			team_id: TEAM_ID,
      filename: "InHouse.mobileprovision"
		)
	
		# Switching to the correct team, in case the scheme has been modified
		update_project_team(
		  path: XCPROJECT_PATH,
		  teamid: TEAM_ID
		)
	
		# Updating provisioning profile with the one from sigh
		update_project_provisioning(
		  xcodeproj: XCPROJECT_PATH,
		  build_configuration: "Release",
      profile: "./InHouse.mobileprovision",
      target_filter: TARGET_FILTER
		)

		# Build your app for hockey distribution
	  gym(
      scheme: SCHEME_TO_BUILD,
			workspace: XCWORKSPACE_PATH, # enter project: XCPROJECT_PATH, if you're not using workspace
			configuration: "Release",
			export_method: "enterprise",
	    clean: true, 
      codesigning_identity: "iPhone Distribution"
	  ) 

		# Get all commits since last successfull Jenkins upload and format note message for Hockey
		changelog = changelog_from_git_commits(
			# http://git-scm.com/docs/pretty-formats
			between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || "HEAD^^^^^", "HEAD"],
			pretty: "- %s %n"
		)
    if changelog.nil?               
      changelog = "Commit history unavailable."
    end
		releaseNotes = "Branch: " + git_branch + "\n\nCommits:\n" + changelog + "\n@" + Time.new.strftime("%-Y") + " Upnetix CI"
  
    # Upload build to Crashlytics
    crashlytics(api_token: CRASHLYTICS_API_KEY,
             build_secret: CRASHLYTICS_BUILD_SECRET,
                   emails: emails,
                   groups: groups,
                    notes: releaseNotes,
            notifications: SHOULD_NOTIFY_TESTERS)
  
end
